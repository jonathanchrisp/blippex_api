{"name":"Blippex api","tagline":"A ruby wrapper for the blippex search engine API, made bythe people, forthe people","body":"[![Gem Version](https://badge.fury.io/rb/blippex_api.png)](http://badge.fury.io/rb/blippex_api)\r\n[![Build Status](https://travis-ci.org/jonathanchrisp/blippex_api.png?branch=master)](https://travis-ci.org/jonathanchrisp/blippex_api)\r\n[![Dependency Status](https://gemnasium.com/jonathanchrisp/blippex_api.png)](https://gemnasium.com/jonathanchrisp/blippex_api)\r\n[![Code Climate](https://codeclimate.com/github/jonathanchrisp/blippex_api.png)](https://codeclimate.com/github/jonathanchrisp/blippex_api)\r\n[![Coverage Status](https://coveralls.io/repos/jonathanchrisp/blippex_api/badge.png?branch=master)](https://coveralls.io/r/jonathanchrisp/blippex_api?branch=master)\r\n\r\nYou can find out more about the Blippex API [here](https://archify.atlassian.net/wiki/display/blippexAPI/api.blippex.org).\r\n\r\n## Documentation\r\n* Original documenation: <https://archify.atlassian.net/wiki/display/blippexAPI/api.blippex.org>\r\n* Gem documentation: <http://rubydoc.info/gems/blippex_api>\r\n\r\n## Getting Started\r\nIn order to be able to send API requests you'll first need to install the `blippex_api` gem.\r\n\r\n```ruby\r\ngem install blippex_api\r\n```\r\n\r\nOnce you have completed the steps above, you can now create an instance of a `BlippexAPI::Client`:\r\n\r\n```ruby\r\nrequire 'blippex_api'\r\napi = BlippexAPI::Client.new\r\n```\r\n\r\nIf you now look at your `BlippexAPI` object instance it will be similar to the following:\r\n\r\n```ruby\r\n<BlippexAPI::Client:0x007fe9a23055f0\r\n@adapter=:net_http,\r\n@api_endpoint=\"https://api.blippex.org/\",\r\n@user_agent=\"BlippexAPI Ruby Gem 1.0.0\">\r\n```\r\n\r\n## Example requests\r\nNow that you have an `BlippexAPI::Client` instance you can now make requests.\r\n\r\n### info endpoint\r\n\r\n```ruby\r\napi.info\r\n```\r\n\r\nThe response is returned within a `Hashie::Mash` instance.\r\n\r\n```ruby\r\n{\r\n  \"total_page_count\"=>5654101,\r\n  \"total_pageview_count\"=>8662559,\r\n  \"yesterday_page_count\"=>55708,\r\n  \"yesterday_pageview_count\"=>67842,\r\n  \"search_count_history\"=> [\r\n    {\r\n      \"date\"=>\"2013-09-24T00:00:00+00:00\",\r\n      \"value\"=>\"83115\"\r\n    },\r\n    {\r\n      \"date\"=>\"2013-09-23T00:00:00+00:00\",\r\n      \"value\"=>\"70182\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### search endpoint\r\n\r\n```ruby\r\napi.search :q => 'Lakers', :w => 20, :d => 2, :highlight => 1, :limit => 1, :offset => 1\r\n```\r\n\r\nAs above, the response is returned within a `Hashie::Mash` instance.\r\n\r\n```ruby\r\n{\r\n  \"request\"=> {\r\n    \"days\"=>2,\r\n    \"weight\"=>20,\r\n    \"limit\"=>1,\r\n    \"offset\"=>1,\r\n    \"query\"=>\"Lakers\"\r\n    },\r\n    \"total\"=>31,\r\n    \"hits_displayed\"=>1,\r\n    \"results\"=> [\r\n      {\r\n        \"_id\"=>\"1d431326999324b8eccb85b7399553f4\",\r\n        \"_source\"=>\"Blippex\",\r\n        \"url\"=>\"http://about.me/claresayas\",\r\n        \"last_seen_at\"=>\"2013-09-24T15:17:25-07:00\",\r\n        \"language\"=>\"en\",\r\n        \"title\"=>\"Clare Sayas (claresayas) on about.me\",\r\n        \"highlight\"=>\r\n          \" of the community managers for EdelmanSV.\\nOn a mission to help entrepreuners find their voice and advance the field of public engagement.\\n<mark>Lakers</mark> fan, film/tv enthusiast, relentless home\",\r\n        \"score\"=> {\r\n          \"score_raw_elasticsearch\"=>0,\r\n          \"score_raw_dwell\"=>4.3298473876598,\r\n          \"sum_time_spend\"=>38,\r\n          \"sum_visits\"=>3,\r\n          \"score_clean_elasticsearch\"=>0,\r\n          \"score_clean_dwell\"=>0.86449725527946,\r\n          \"score_final\"=>0.69159780422356\r\n        }\r\n      }\r\n    ],\r\n    \"total_pages_in_db\"=>5687567\r\n}\r\n\r\n```\r\n\r\n### ratelimitstatus endpoint\r\n\r\n```ruby\r\napi.rate_limit_status\r\n```\r\n\r\nAs above, the response is returned within a `Hashie::Mash` instance.\r\n\r\n```ruby\r\n{\r\n  \"ip\"=>\"00.0.000.00\",\r\n  \"data\"=> {\r\n    \"info\"=> {\r\n      \"remaining\"=>997,\r\n      \"reset\"=>1380136296,\r\n      \"limit\"=>1000\r\n    },\r\n    \"search\"=> {\r\n      \"remaining\"=>3587,\r\n      \"reset\"=>1380136296,\r\n      \"limit\"=>3600\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nTo find out more information about `Hashie` please visit the following link: <https://github.com/intridea/hashie>.\r\n\r\n## Tests\r\nThere are a number of unit tests which are included as part of this project, please run:\r\n\r\n```ruby\r\nrspec spec\r\n```\r\n\r\nPlease note that a number of tests still need to be added so I don't currently have complete coverage, subject to workload these will be slowly added over the next few months.\r\n\r\n## Feedback\r\nI would be more than happy to recieve feedback, please email me at: jonathan.chrisp@gmail.com.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}